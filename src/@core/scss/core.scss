// ** bootstrap
@import "bootstrap/dist/css/bootstrap.min.css";
@import "react-loading-skeleton/dist/skeleton.css";
@import "react-perfect-scrollbar/dist/css/styles.css";
@import url("https://fonts.googleapis.com/css2?family=Poppins&display=swap");
@import "react-toastify/dist/ReactToastify.css";
// @import "./ProductSansRegular.ttf";
@import "./variables/variables.scss";
@import "./app/react-select.scss";
@import "./app/forms.scss";
@import "./app/pagination.scss";
@import "./app/misc.scss";
// @import "./app/layouts.scss";
@import "./app/navbar.scss";
// @import "./app/authentication.scss";
@import "./app/toast.scss";
@import "./app/table.scss";
@import "./app/buttons.scss";
@import "./app/app.scss";

@import "./app/ui-loader.scss";
@import "./app/ripple.scss";
@import "./app/divider.scss";
@import "./bootstrap/bootstrap-extended.scss";

body {
  margin: 0;
  font-family: "Poppins", sans-serif;
  background-color: #f5f5f7;
  color: $text;
}
// p {
//   text-align: justify;
// }
code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
}

.first_uppercase {
  &::first-letter {
    text-transform: capitalize;
  }
}

.border-none {
  border: none !important;
}

.text_nowrap {
  display: flex !important;
  flex-wrap: nowrap !important;
}

.opacity_low {
  opacity: 0.5;
  cursor: default;
  &:hover {
    background-color: $white;
  }
}
.no_opacity {
  opacity: 0;
}
.p-0 {
  padding: 0;
}
.h-0 {
  height: 0px;
}
.match-height {
  > [class*="col"] {
    display: flex;
    flex-flow: column;

    > .card {
      flex: 1 1 auto;
    }
  }
}

.circle {
  width: fit-content;
  padding: 10px;
  border-radius: 50%;
}
.op-0 {
  opacity: 0;
}
.w-90 {
  width: 90%;
}

.h-80 {
  height: 80vh;
}

.h-100 {
  height: 100vh;
}

.cursor-default {
  cursor: default !important;
}
.cursor-pointer {
  cursor: pointer !important;
}

.dashboard_square {
  border-radius: 0.5rem;
  aspect-ratio: 1/1;
  padding-bottom: 30px;
  .react-loading-skeleton {
    border-radius: 0.5rem;
    height: 100%;
  }
}
.rotate_down {
  transform: perspective(800px) rotate(90deg);
}
.rotate_down_180 {
  transform: perspective(800px) rotate(180deg);
}
.transition {
  transition: 0.15s linear;
}

.is_active {
  background-color: $primary;
  color: $white;
  border-color: $primary;
}

/* From uiverse.io by @namecho */
.switch {
  --button-width: 3em;
  --button-height: 1.5em;
  --toggle-diameter: 1em;
  --button-toggle-offset: calc(
    (var(--button-height) - var(--toggle-diameter)) / 2
  );
  --toggle-shadow-offset: 10px;
  --toggle-wider: 3em;
  --color-grey: #cccccc;
  --color-green: #fb6200;
}

.slider {
  display: inline-block;
  width: var(--button-width);
  height: var(--button-height);
  background-color: var(--color-grey);
  border-radius: calc(var(--button-height) / 2);
  position: relative;
  transition: 0.3s all ease-in-out;
}

.slider::after {
  content: "";
  display: inline-block;
  width: var(--toggle-diameter);
  height: var(--toggle-diameter);
  background-color: #fff;
  border-radius: calc(var(--toggle-diameter) / 2);
  position: absolute;
  top: var(--button-toggle-offset);
  transform: translateX(var(--button-toggle-offset));
  box-shadow: var(--toggle-shadow-offset) 0
    calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
  transition: 0.3s all ease-in-out;
}

.switch input[type="checkbox"]:checked + .slider {
  background-color: var(--color-green);
}

.switch input[type="checkbox"]:checked + .slider::after {
  transform: translateX(
    calc(
      var(--button-width) - var(--toggle-diameter) - var(--button-toggle-offset)
    )
  );
  box-shadow: calc(var(--toggle-shadow-offset) * -1) 0
    calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
}

.switch input[type="checkbox"] {
  display: none;
}

.switch input[type="checkbox"]:active + .slider::after {
  width: var(--toggle-wider);
}

.switch input[type="checkbox"]:checked:active + .slider::after {
  transform: translateX(
    calc(
      var(--button-width) - var(--toggle-wider) - var(--button-toggle-offset)
    )
  );
}
.repair_images {
  // background-color: red;
  margin-top: 10px;
  img {
    aspect-ratio: 1/1;
    width: 100%;
    height: 100%;
    object-fit: contain;
    display: flex;
    align-items: center;
    justify-items: center;
  }
  .close_btn {
    display: inline-block;
    position: absolute;
    text-align: right;
    top: 40;
    // background-color: red;
    width: 100%;
    padding-right: 90%;
  }
}
.edit-class {
  small {
    &:hover {
      text-decoration: underline;
      color: $primary;
    }
  }
}
.form-check-input {
  height: 1.1rem;
  width: 1.1rem;
  box-shadow: none !important;
}
.form-check-input:checked {
  background-image: url("../images/check.png") !important;
  background-color: $appPrimary;
  border-color: $appPrimary;
  box-shadow: $box-shadow;
}
.form-check-input:focus {
  border-color: $appPrimary;
  box-shadow: $box-shadow;
}
.label-size {
  font-size: 1rem !important;
}
.bg-primary {
  background-color: $primaryRgba !important;
}
.bg-gray-nt {
  background: rgba(lightgray, 0.2) !important;
  color: #cccccc;
}
.span-color {
  color: red;
  cursor: pointer;
}

.document-container {
  padding: 10px !important;
  width: 100% !important;
}

.description_p {
  white-space: nowrap;
  overflow: hidden !important;
  text-overflow: ellipsis;
  margin: 0;
  width: fit-content;
  max-width: 400px;

  &::first-letter {
    text-transform: uppercase;
  }
}

.scroll-top {
  position: fixed;
  right: 20px;
  bottom: 20px;
  display: flex;
  color: white;
  background: rgba($color: $appPrimary, $alpha: 0.9);
  cursor: pointer;
  padding: 5px;
  border-radius: 0.375rem;
}
